                            | # Execution begins at address 0
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp
0x00a: 804800000000000000   | 	call main
0x013: 00                   | 	halt
                            | 
                            | # Sample linked list
0x018:                      | 	.align 8
0x018:                      | 	ele1:
0x018: 0a00000000000000     | 		.quad 0x00a
0x020: 2800000000000000     | 		.quad ele2
0x028:                      | 	ele2:
0x028: b000000000000000     | 		.quad 0x0b0
0x030: 3800000000000000     | 		.quad ele3
0x038:                      | 	ele3:
0x038: 000c000000000000     | 		.quad 0xc00
0x040: 0000000000000000     | 		.quad 0
                            | 
                            | # long sum(list_ptr ls)
                            | # ls in %rdi
0x048:                      | main:
0x048: 30f00000000000000000 | 	irmovq $0, %rax
0x052: 30f71800000000000000 | 	irmovq ele1, %rdi
0x05c:                      | recur:
0x05c: 708500000000000000   | 	jmp test
0x065: 90                   | 	ret
                            | 
0x066:                      | back_main:
0x066: 50670000000000000000 | 	mrmovq (%rdi), %rsi
0x070: 6060                 | 	addq %rsi, %rax
0x072: 50770800000000000000 | 	mrmovq 8(%rdi), %rdi
0x07c: 705c00000000000000   | 	jmp recur
                            | 
0x085:                      | test:
0x085: 6277                 | 	andq %rdi, %rdi		# Set CC
0x087: 746600000000000000   | 	jne back_main		# check %rdi == 0
0x090: 90                   | 	ret
                            | 
                            | 
                            | 
                            | # Stack starts here and grows to lower address
0x200:                      | 	.pos 0x200
0x200:                      | stack:
