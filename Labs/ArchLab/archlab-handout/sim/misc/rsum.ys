# Execution begins at address 0
	.pos 0
	irmovq stack, %rsp
	call main
	halt

# Sample linked list
	.align 8
	ele1:
		.quad 0x00a
		.quad ele2
	ele2:
		.quad 0x0b0
		.quad ele3
	ele3:
		.quad 0xc00
		.quad 0

# long sum(list_ptr ls)
# ls in %rdi
main:
	irmovq $0, %rax
	irmovq ele1, %rdi
recur:
	jmp test
	ret

back_main:
	mrmovq (%rdi), %rsi
	addq %rsi, %rax
	mrmovq 8(%rdi), %rdi
	jmp recur

test:
	andq %rdi, %rdi		# Set CC
	jne back_main		# check %rdi == 0
	ret



# Stack starts here and grows to lower address
	.pos 0x200
stack:
