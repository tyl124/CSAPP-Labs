# Execution begins at address 0
	.pos 0
	irmovq	stack, %rsp		# Set up stack pointer
	call main				# Execution main progrem
	halt					# Terminate program

# Array of link list
	.align8
	ele1:
			.quad 0x00a
			.quad ele2
	ele2:
			.quad 0x0b0
			.quad ele3
	ele3:
			.quad 0xc00
			.quad 0

main:
	irmovq ele1, %rdi
	call sum_list			# sum_list(list_ptr ls)
	ret

# sum_list(list_ptr ls)
# ls in %rdi
sum_list:
	irmovq $0, %rax			# Initial retrun value 0
	jmp test				# check 
loop:
	mrmovq (%rdi), %rsi		# add link node value to return value
	addq %rsi, %rax
	mrmovq 8(%rdi), %rdi	# move link to next node 
test:
	andq %rdi, %rdi			# check if pointer == NULL
	jne loop				# if pointer != NULL, continue to loop
	ret

# Stack starts here and grows to lower address
	.pos 0x200
stack:
